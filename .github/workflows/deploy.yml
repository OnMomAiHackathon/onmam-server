name: CI/CD Workflow for Spring Boot
on:
  push:
    branches:
      - dev

env:
  AWS_REGION: ap-northeast-2
  SPRINGBOOT_AWS_S3_BUCKET: onmom-server
  AWS_CODE_DEPLOY_APPLICATION: onmomCodeDeploy
  AWS_CODE_DEPLOY_GROUP: onmomCodeDeploy

jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Set up JDK 17 for Spring Boot
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "corretto"

      - name: Set environment variables from GitHub Secrets
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> $GITHUB_ENV
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> $GITHUB_ENV

      - name: Build Spring Boot project with Gradle
        run: ./gradlew clean build -x test -Dspring.profiles.active=prod

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}

      - name: Package Spring Boot build into a zip
        run: |
          cp appspec.yml build/libs/
          cp deploy.sh build/libs/
          cd build/libs/
          zip -r springboot-build-$GITHUB_SHA.zip onmom-server-0.0.1-SNAPSHOT.jar appspec.yml deploy.sh

      - name: Upload Spring Boot build zip to S3
        run: |
          aws s3 cp ${GITHUB_WORKSPACE}/build/libs/springboot-build-$GITHUB_SHA.zip s3://${{ env.SPRINGBOOT_AWS_S3_BUCKET }}/springboot-build/$GITHUB_SHA.zip

      - name: Deploy to EC2 via CodeDeploy
        run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=${{ env.SPRINGBOOT_AWS_S3_BUCKET }},key=springboot-build/$GITHUB_SHA.zip,bundleType=zip
